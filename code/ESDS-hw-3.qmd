---
title: "Homework 3"
format: docx

---

https://github.com/katie-cheslick/cheslick-katie-hw-3.git



# Problem 1: Multiple linear regression (52 points)

## reading in packages

```{r}
# general use
library(flextable)
library(tidyverse)
library(readxl)
library(here)
library(janitor)

# visualizing pairs
library(GGally)

# model selection
library(MuMIn)

# model predictions
library(ggeffects)

# model tables
library(gtsummary)
library(modelsummary)

```

## questions

a) Make a table or list of all the models from class and the last one you constructed on your own. Write a caption for your table. (8 points)

```{r}

# read in data from excel sheet
model_types <- read_xlsx(path = here("data", 
                                     "updatedmodeltypes.xlsx"))

# create flextable
ft <- flextable(model_types) 
# create flextable caption describing table content
ft <- set_caption(ft, caption = ("Table 1: Displays five multiple regression model types used to assess the influence of water treatment, species, and specific leaf area on plant mass, including a null model, a saturated model, and simple models. The null model has no predictor variables, the saturated model includes all predictors, and the simple models have unique combinations of the three predictor variables.")) 
# add table title
ft <- add_header_row(ft, values = "Multiple Linear Regression Model Types", colwidths = c(5))
# show flextable output
print(ft) 

```
b) Write a 5-6 sentence “statistical methods” section. (8 points)

**In order to examine the influence of specific leaf area, water treatment, and species on plant mass, I created and assessed five linear models (a null model with no predictors, a saturated model with all predictors, and simpler models comparing only specific leaf area and water treatment, specific leaf area and species, and species and water treatment). I used the Akaike Information Criterion (AIC) to determine which model best predicted the data, which I assessed by looking for the lowest value of delta (the difference between the given model and the best model, which was 0 for the best model). I then confirmed that the best model conformed to the assumptions of a linear model by checking the diagnostics, which were visualized by coding the 'plot()' of that linear model. I looked for homoscedasticity (randomly distributed residuals), normally distributed residuals on the QQ plot (a straight line along the dotted diagonal), and outliers located within Cook's distance.**


c) Make a visualization of the model predictions with underlying data for your “best” model. (20 points)


```{r}
drought_exp <- read_xlsx(path = here("data", 
                                     "Valliere_etal_EcoApps_Data.xlsx"),
                         sheet = "First Harvest")

# quick look at data 
str(drought_exp)
class(drought_exp)

# cleaning
drought_exp_clean <- drought_exp %>% 
  clean_names() %>% # nicer column names
  mutate(species_name = case_when( # adding column with species scientific names
    species == "ENCCAL" ~ "Encelia californica", # bush sunflower
    species == "ESCCAL" ~ "Eschscholzia californica", # California poppy
    species == "PENCEN" ~ "Penstemon centranthifolius", # Scarlet bugler
    species == "GRICAM" ~ "Grindelia camporum", # great valley gumweed
    species == "SALLEU" ~ "Salvia leucophylla", # Purple sage
    species == "STIPUL" ~ "Nasella pulchra", # Purple needlegrass
    species == "LOTSCO" ~ "Acmispon glaber" # deerweed
  )) %>% 
  relocate(species_name, .after = species) %>% # moving species_name column after species
  mutate(water_treatment = case_when( # adding column with full treatment names
    water == "WW" ~ "Well watered",
    water == "DS" ~ "Drought stressed"
  )) %>% 
  relocate(water_treatment, .after = water) # moving water_treatment column after water
# create model 4 with water treatment and sp as predictors
model4 <- lm(total_g ~ water_treatment + species_name,
             data = drought_exp_clean)
# plot the model
plot(model4)

# create data table of predictions for model 4
model_preds4 <- ggpredict(model4, 
                         terms = c("water_treatment", # set the terms we are interested in
                                   "species_name"))

# creating new data frame of model predictions for plotting
model_preds_plotting4 <- model_preds4 %>% 
  rename(species_name = group, # renaming columns to make this easier to use
         water_treatment = x,
         total_g = predicted)

# use View(model_preds_for_plotting) to compare this to the original model_preds data frame

ggplot() +
  # set underlying data
  geom_point(data = drought_exp_clean,
             aes(x = species_name, # set x axis
                 y = total_g, # set y axis
                 color = water_treatment)) + # use different colors for each water treatment
  # cleaner theme and no gridlines
  theme_classic() +
  # creating different panels for species
  facet_wrap(~species_name) + 
  labs(x = "Species name", # rename x axis
       y = "Plant mass (g)", # rename y axis
       title = "Influence of Plant Species and Water Treatment on Plant Mass") + # add title
  # change colors
  scale_color_manual(values = c("Well watered" = "green", "Drought stressed" = "pink"))
 
  
```

d) Write a caption for your visualization. (6 points)

**Figure 1: **

e) Write a 3-4 sentence results section. (10 points)

**Species type and water treatment were found to be the best predictors of total plant mass (linear regression, F(62,7) = 27.1, p < 0.001, ⍺ = 0.05). Based on model predictions, plants in the well watered treatment had 0.12 ± 0.02 grams more plant mass than plants in the drought stressed treatment, on average across species. On average, Encelia california, Eschscholzia california, Grindelia camporum, Nasella pulchra, Penstemon centranthifolius, and Salvia leucophylla plant species had more plant mass than Acmispon glaber (0.22 ± 0.03 g, 0.23 ± 0.03 g, 0.31 ± 0.03 g, 0.23 ± 0.03 g, 0.05 ± 0.03 g, and 0.12 ± 0.03 g, respectively).**



# Problem 2: Affective visualization (24 points)

a) Describe in words what an affective visualization could look like for your personal data (3-5 sentences). (2 points)

**For my personal data, I could create a representation of my sleep habits that is similar in form to Stefanie Posavec and Giorgia Lupi’s Dear Data project illustrating different types of goodbyes. I could create different colors and shapes associated with my predictor variables (day of week, whether I slept alone, if I was tired or anxious) and response variables (minutes asleep and quality of sleep), and organize the colors and shapes in a chronological way. I could then create a detailed legend explaining what the colors and shapes are telling the viewer.**

b) Create a sketch (on paper) of your idea. (2 points)

c) Make a draft of your visualization. (12 points)



# Problem 3: Problem 3. Statistical critique (36 points)

a) Revisit and summarize (6 points)

b) Visual clarity (10 points)

c) Aesthetic clarity (10 points)

d) Recommendations (can be longer than 4 sentences, 10 points)

## reading in packages

```{r}
# general use
library(flextable)
library(tidyverse)
library(readxl)
library(here)
library(janitor)

# visualizing pairs
library(GGally)

# model selection
library(MuMIn)

# model predictions
library(ggeffects)

# model tables
library(gtsummary)
library(flextable)
library(modelsummary)

drought_exp <- read_xlsx(path = here("data", 
                                     "Valliere_etal_EcoApps_Data.xlsx"),
                         sheet = "First Harvest")

# quick look at data 
str(drought_exp)
class(drought_exp)
```

## cleaning

```{r}
# cleaning
drought_exp_clean <- drought_exp %>% 
  clean_names() %>% # nicer column names
  mutate(species_name = case_when( # adding column with species scientific names
    species == "ENCCAL" ~ "Encelia californica", # bush sunflower
    species == "ESCCAL" ~ "Eschscholzia californica", # California poppy
    species == "PENCEN" ~ "Penstemon centranthifolius", # Scarlet bugler
    species == "GRICAM" ~ "Grindelia camporum", # great valley gumweed
    species == "SALLEU" ~ "Salvia leucophylla", # Purple sage
    species == "STIPUL" ~ "Nasella pulchra", # Purple needlegrass
    species == "LOTSCO" ~ "Acmispon glaber" # deerweed
  )) %>% 
  relocate(species_name, .after = species) %>% # moving species_name column after species
  mutate(water_treatment = case_when( # adding column with full treatment names
    water == "WW" ~ "Well watered",
    water == "DS" ~ "Drought stressed"
  )) %>% 
  relocate(water_treatment, .after = water) # moving water_treatment column after water
```

# Visualizing

## correlations 

```{r}
ggpairs(drought_exp_clean, # data frame
        columns = c("leaf_dry_weight_g", # columns to visualize
                    "sla", 
                    "shoot_g", 
                    "root_g", 
                    "total_g"), 
        upper = list(method = "pearson")) + # calculating Pearson correlation coefficient
  theme_bw() + # cleaner theme
  theme(panel.grid = element_blank()) # getting rid of gridlines
```

Choose 3 pairs of variables to compare. Make notes of those comparisons below.    

**insert comparison 1 here**  

**insert comparison 2 here**  

**insert comparison 3 here**

## Preliminary visualizations  

If you aren't familiar with each plant species, google them!  

Then go exploring! Visually.  

In this scenario, we're interested in how three variables affect total biomass: species (categorical), water treatment (categorical), specific leaf area (SLA, numeric).  

**Note:** it is totally ok (and encouraged) to explore these separately!

### how does total biomass differ between species?

```{r}
ggplot(data = drought_exp_clean, # data frame
       aes(x = reorder(species_name, # reordering x-axis
                       -total_g, # in reverse order of mean total mass
                       fun = mean), # calculating mean to reorder
           y = total_g)) + # y-axis
  geom_jitter(width = 0.1, # narrow jitter
              height = 0) # not jittering points up and down
```

**response here**

### how does total biomass differ between water treatments?

```{r}
ggplot(data = drought_exp_clean, # data frame
       aes(x = water_treatment, # x-axis
           y = total_g)) + # y-axis
  geom_jitter(width = 0.1, # narrow jitter
              height = 0) # not jittering points up and down
```

**response here**

### how does specific leaf area (SLA) influence total biomass?

```{r}
ggplot(data = drought_exp_clean, # data frame
       aes(x = sla, # x-axis
           y = total_g)) + # y-axis
  geom_point() # scatterplot
```

**response here**

# Model construction

What is the null model?  

0. **null model here**  

What is the saturated model?  

1. **saturated model here**  

In class we are going to try two more models:  

2.  **total biomass as a function of SLA and water treatment**  
3.  **total biomass as a function of SLA and species**  

For homework, you will construct one more model:  

4. **total biomass as a function of water treatment and species**  

You will then compare all 5 models to determine which best describes total biomass. **For your homework, you will need to create a table summarizing the structure of these models.**

## 0. Null model

```{r}
model0 <- lm(total_g ~ 1, # formula
             data = drought_exp_clean) # data frame
```

## 1. total biomass as a function of SLA, water treatment, and species

```{r}
# saturated model
model1 <- lm(total_g ~ sla + water_treatment + species_name,
             data = drought_exp_clean)

par(mfrow = c(2, 2))
plot(model1)
# you might get a warning when you run this code - that is ok!
```

## 2. total biomass as a function of SLA and water treatment

```{r}
model2 <- lm(total_g ~ sla + water_treatment,
             data = drought_exp_clean)

plot(model2)
```

## 3. total biomass as a function of SLA and species

```{r}
model3 <- lm(total_g ~ sla + species_name,
             data = drought_exp_clean)

plot(model3)
```
## 4. total biomass as a function of water treatment and species

```{r}
model4 <- lm(total_g ~ water_treatment + species_name,
             data = drought_exp_clean)

plot(model4)
```


# Model selection

From the `MuMIn` package

```{r}
model.sel(model0,
          model1, 
          model2, 
          model3,
          model4)
```

Out of the four models we have tried, the best model is the one that includes **insert predictors here**  

Note that this may change once you fit and compare the other model!

# Model summary

```{r}
summary(model4)
```

What are the reference levels?  

- reference for `water_treatment`  
- reference for `species_name`  

**reference for water_treatment:** **insert response here**  
**reference for species_name:** **insert response here**  

Interpret the model estimates for the:  

- intercept: **insert response here**  
- SLA slope: **insert response here**  
- well watered estimate: **insert response here**    
- Lotus scoparius estimate: **insert response here**    
- Stipa pulchra estimate: **insert response here**    

# Model predictions

**Note:** only plot terms in the model you select - if your doesn't include one of these terms, take it out and adjust the plotting code accordingly!

```{r}
model_preds4 <- ggpredict(model4, 
                         terms = c("water_treatment", 
                                   "species_name"))

# use View(model_preds) to see the predictions as a data frame
# use model_preds to see the predictions formatted nicely
```



# Making a table

```{r}
# one option for a single model
flextable::as_flextable(model1) 

# another option for a single model
gtsummary::tbl_regression(model1)

# comparing models
modelsummary::modelsummary( # this function takes a list of models
  list( 
    "null" = model0, # "model name" = model object
    "model 1" = model1,
    "model 2" = model2,
    "model 3" = model3
  )
) 

```

**Note 1: notice all the information at the bottom of the `modelsummary` output - if you only needed the AIC and delta AIC, what could you do? see package documentation for help**

**Note 2: you will always have to report the F-statistic, degrees of freedom, test statistic, p-value, ⍺, and R^2^. Whether or not this information is in a table is up to you.**

